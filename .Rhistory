1+1
import pandas as pd
pd.DataFrame([{"A":1,2,3,4},{"B":1,2,3,4}])
import pandas as pd
pd.DataFrame([{"A":[1,2,3,4]},{"B":[1,2,3,4]}])
ggplot(data = fortify(rolling_deltaH)) +
geom_line(aes(x = Index, y = deltaH))+
geom_hline(yintercept = q90, linetype = "dashed", color = "red") +
geom_hline(yintercept = q95, linetype = "dashed", color = "blue") +
geom_hline(yintercept = q99, linetype = "dashed", color = "green") +
annotate("text", x = min(index(rolling_deltaH)), y = q90, label = "q90", vjust = -0.5, color = "red") +
annotate("text", x = min(index(rolling_deltaH)), y = q95, label = "q95", vjust = -0.5, color = "blue") +
annotate("text", x = min(index(rolling_deltaH)), y = q99, label = "q99", vjust = -0.5, color = "green")
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
library(doParallel)
library(tidyverse)
library(quantmod)
library(parallel)
library(plot3D)
library(readxl)
library(dplyr)
library(GA)
library(xts)
library(zoo)
setwd("~/Documents/Faculdade/IC - Crypto Portfolio Efficiency")
source('utils_R/fractality.R')
crypto_prices <- read.csv("data/Crypto_prices.csv")
crypto_prices <- na.omit(crypto_prices)
crypto_prices$date <- as.Date(crypto_prices$date)
crypto_prices <- xts(crypto_prices[,-1], order.by = crypto_prices$date)
crypto_returns <- PerformanceAnalytics::Return.calculate(crypto_prices,method = 'log')
crypto_returns <- na.omit(crypto_returns)
rw_deltaH_360_10000 <-readRDS('deltaH_simulations/rw_deltaH_360_10000.rds')
rw_deltaH_720_10000 <-readRDS('deltaH_simulations/rw_deltaH_720_10000.rds')
rw_deltaH_1080_10000 <-readRDS('deltaH_simulations/rw_deltaH_1080_10000.rds')
# Create a list to store xts objects
deltaH <- list()
# Define a function to read and process the data
process_data <- function(file_path) {
csv_file <- paste("crypto_rolling_deltaH", file_path, sep = '/')
data <- read.csv(csv_file)[,-1]
data$date <- as.POSIXct(data$date)
#data_xts <- xts(data[, 2], order.by = data$date)
#colnames(data_xts) <- colnames(data[, 2])
return( data)
}
# Loop through the files and append xts objects to the list
for (file_path in list.files("crypto_rolling_deltaH")) {
print(head(process_data(file_path)))
}
aAaa <- list()
# Loop through the files and append xts objects to the list
for (file_path in list.files("crypto_rolling_deltaH")) {
print(head(process_data(file_path)))
aAaa <- append(aAaa,process_data(file_path))
}
aAaa[[1]]
aAaa[1]
aAaa <- list()
# Loop through the files and append xts objects to the list
for (file_path in list.files("crypto_rolling_deltaH")) {
print(head(process_data(file_path)))
aAaa <- list(aAaa,list(process_data(file_path)))
}
aAaa[[1]]
aAaa[[2]] |> head()
aAaa[2] |> head()
for (file_path in list.files("crypto_rolling_deltaH")) {
if (grepl("360", basename(file_path))) {
deltaH_360 <- cbind(deltaH_360,process_data(file_path))
}
}
deltaH_360<- NULL
# Loop through the files and append xts objects to the list
for (file_path in list.files("crypto_rolling_deltaH")) {
if (grepl("360", basename(file_path))) {
deltaH_360 <- cbind(deltaH_360,process_data(file_path))
}
}
deltaH_360<- data.frame(matrix(NA, nrow = 0, ncol = num_columns))
deltaH_360<- data.frame(matrix(NA, nrow = 0, ncol = 2))
# Loop through the files and append xts objects to the list
for (file_path in list.files("crypto_rolling_deltaH")) {
if (grepl("360", basename(file_path))) {
deltaH_360 <- cbind(deltaH_360,process_data(file_path))
}
}
deltaH_360 <- list()
rolling_deltaH_files <- list.files("crypto_rolling_deltaH")
# Loop through the files and append xts objects to the list
for (file_index in 1:length(rolling_deltaH_files)) {
file_path <- rolling_deltaH_files[file_index]
if (grepl("360", basename(file_path))) {
deltaH_360[[file_index]] <- process_data(file_path)
}
}
deltaH_360[[1]]
deltaH_360[[2]]
rolling_deltaH_files[1]
do.call(cbind, deltaH_360)
deltaH_360 <- list()
# Loop through the files and append xts objects to the list
for (file_index in 1:length(rolling_deltaH_files)) {
file_path <- rolling_deltaH_files[file_index]
if (grepl("360", basename(file_path))) {
deltaH_360[[file_index]] <- process_data(file_path)
}
}
deltaH_360[[1]]
length(deltaH_360)
length(rolling_deltaH_files)
read.csv("crypto_rolling_deltaH/deltaH_melt_360.csv")
read.csv("crypto_rolling_deltaH/deltaH_melt_360.csv")
deltaH_melt_360 <- read.csv("crypto_rolling_deltaH/deltaH_melt_360.csv")
deltaH_melt_720 <- read.csv("crypto_rolling_deltaH/deltaH_melt_720.csv")
deltaH_melt_1080 <- read.csv("crypto_rolling_deltaH/deltaH_melt_1080.csv")
deltaH_melt_360
rw_deltaH_360_10000
read.csv("crypto_rolling_deltaH/deltaH_melt_360.csv") |>
dplyr::mutate(q90=quantile(rw_deltaH_360_10000, 0.90),
q95=quantile(rw_deltaH_360_10000, 0.95),
q95=quantile(rw_deltaH_360_10000, 0.99))
deltaH_melt_360 <- read.csv("crypto_rolling_deltaH/deltaH_melt_360.csv") |>
dplyr::mutate(q90=quantile(rw_deltaH_360_10000, 0.90),
q95=quantile(rw_deltaH_360_10000, 0.95),
q99=quantile(rw_deltaH_360_10000, 0.99))
deltaH_melt_720 <- read.csv("crypto_rolling_deltaH/deltaH_melt_720.csv") |>
dplyr::mutate(q90=quantile(rw_deltaH_720_10000, 0.90),
q95=quantile(rw_deltaH_720_10000, 0.95),
q99=quantile(rw_deltaH_720_10000, 0.99))
deltaH_melt_1080 <- read.csv("crypto_rolling_deltaH/deltaH_melt_1080.csv")  |>
dplyr::mutate(q90=quantile(rw_deltaH_1080_10000, 0.90),
q95=quantile(rw_deltaH_1080_10000, 0.95),
q99=quantile(rw_deltaH_1080_10000, 0.99))
deltaH_melt_720
